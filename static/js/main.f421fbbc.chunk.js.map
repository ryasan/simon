{"version":3,"sources":["audios/simonSound1.mp3","audios/simonSound2.mp3","audios/simonSound3.mp3","audios/simonSound4.mp3","images/ghlogo.svg","styles/Button.ts","styles/App.ts","styles/Icon.ts","styles/Navbar.ts","styles/Modal.ts","utils/createNeonAnimation.ts","utils/idle.ts","utils/random.ts","styles/Pads.ts","styles/Announcement.ts","styles/Board.ts","constants.ts","components/GithubIcon.tsx","styles/Home.ts","components/Navbar.tsx","action-types.ts","components/Pads.tsx","utils/playSound.ts","components/Modal.tsx","components/Announcement.tsx","pages/Board.tsx","pages/Home.tsx","App.tsx","index.tsx"],"names":["module","exports","Button","styled","button","App","div","wobble","keyframes","wobbleStyles","css","Icon","a","props","isAnimating","Img","img","Navbar","activeStyles","Modal","isActive","Container","Message","idle","ms","Promise","resolve","setTimeout","random","arr","randomInt","length","max","Math","floor","Pads","Inner","activeCSS","color","lighten","createNeonAnimation","Item","playingSequence","active","ScoreContainer","jellyBounce","ScoreText","Announcement","fadeUp","fadeUpStyles","Text","span","gameOverStyles","selectedStyles","Board","selected","gameOver","HighScore","colors","colorMap","red","blue","yellow","green","soundMap","sound1","sound2","sound3","sound4","GithubIcon","className","useState","setIsAnimating","handleMouseEnter","href","onMouseEnter","src","GH_ICON","alt","Home","Title","h1","Options","NavbarComponent","state","started","dispatch","onClick","type","disabled","PadsComponent","guessed","sequence","score","selectColor","briefly","briefEffect","arg","duration","handleClick","e","target","dataset","payload","useEffect","Audio","play","c","playSequence","map","i","key","data-color","ModalComponent","messages","AnnouncementComponent","message","setMessage","setRandomMessage","useCallback","m","prev","then","initialState","highScore","reducer","action","BoardPage","useReducer","checkWin","every","tail","textColors","HomePage","onNavigate","style","base","AppComponent","setSelected","navigate","path","window","history","pushState","handlePop","pathname","location","addEventListener","removeEventListener","console","log","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f421fbbc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/simonSound1.37e5b1b1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/simonSound2.3099af8a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/simonSound3.691b87b6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/simonSound4.309847df.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ghlogo.ce1af83f.svg\";","import styled from 'styled-components'\n\nconst Button = styled.button`\n    background: transparent;\n    border: 2px solid white;\n    border-radius: 5px;\n    color: white;\n    cursor: pointer;\n    font-family: inherit;\n    font-size: 20px;\n    height: 50px;\n    min-width: 100px;\n    outline: none;\n    padding: 0 20px;\n    transition: background 0.2s, color 0.2s;\n\n    &:hover {\n        background: white;\n        color: black;\n    }\n\n    &:disabled {\n        background: transparent;\n        color: white;\n        cursor: not-allowed;\n    }\n`\n\nexport { Button }\n","import styled from 'styled-components'\n\nconst App = styled.div`\n    height: 100%;\n    position: relative;\n`\n\nexport { App }\n","import styled, { keyframes, css } from 'styled-components'\n\nconst wobble = keyframes`\n    0% { transform: rotate(0deg); }\n    25% { transform: rotate(-30deg); }\n    50% { transform: rotate(30deg); }\n    75% { transform: rotate(-30deg); }\n    100% { transform: rotate(0deg); }\n`\n\nconst wobbleStyles = css`\n    animation: ${wobble} 1s;\n`\n\nconst Icon = styled.a`\n    cursor: pointer;\n    height: 50px;\n    width: 50px;\n\n    ${props => props.isAnimating && wobbleStyles}\n`\n\nIcon.Img = styled.img`\n    height: 100%;\n    width: 100%;\n`\n\nexport { Icon }\n","import styled from 'styled-components'\n\nexport const Navbar = styled.div`\n    color: white;\n    display: flex;\n    justify-content: space-between;\n    padding: 20px;\n    position: relative;\n    top: 0;\n    width: 100%;\n`\n","import styled, { css } from 'styled-components'\n\nconst activeStyles = css`\n    height: 100vh;\n    left: 0;\n    opacity: 1;\n    top: 0;\n    transform: scale(1);\n    width: 100vw;\n    z-index: 2;\n`\n\nexport const Modal = styled.div`\n    align-items: center;\n    display: flex;\n    height: 100%;\n    justify-content: center;\n    opacity: 0;\n    position: absolute;\n    top: 0;\n    transform: scale(0);\n    transition: all 0.5s;\n    width: 100%;\n    z-index: -1;\n\n    ${props => props.isActive && activeStyles}\n`\n\nModal.Container = styled.div`\n    background-color: transparent;\n    border: 2px solid white;\n    border-radius: 5px;\n    display: flex;\n    height: 150px;\n    justify-content: center;\n    position: absolute;\n    width: 300px;\n    z-index: 9999;\n`\n\nModal.Message = styled.div`\n    align-items: center;\n    color: white;\n    display: flex;\n    flex-direction: column;\n    font-size: 20px;\n    justify-content: space-around;\n    text-align: center;\n`\n","import { keyframes } from 'styled-components'\n\nimport { lighten } from 'polished'\n\nconst createNeonAnimation = (color: string): void => keyframes`\n        0% {\n            background: ${color};\n            border: 0;\n            box-shadow: 0;\n            transform: scale(1);\n        }\n\n        50% {\n            background: ${lighten(0.3, color)};\n            border: 3px solid white;\n            box-shadow:\n                0 0 10px white,\n                0 0 20px white,\n                0 0 30px white,\n                0 0 40px ${color},\n                0 0 70px ${color},\n                0 0 80px ${color},\n                0 0 100px ${color},\n                0 0 150px ${color};\n            transform: scale(1.1);\n        }\n\n        100% {\n            background: ${color};\n            border: 0;\n            box-shadow: 0;\n            transform: scale(1);\n        }\n`\n\nexport { createNeonAnimation }\n","const idle = (ms = 0): Promise<any> => {\n    return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nexport { idle }\n","export const random = (arr: string[]): string => {\n    return arr[randomInt(arr.length)]\n}\n\nconst randomInt = max => {\n    return Math.floor(Math.random() * Math.floor(max))\n}\n","import styled, { css, keyframes } from 'styled-components'\nimport { createNeonAnimation } from '../utils'\n\nconst Pads = styled.div`\n    position: relative;\n    flex-grow: 1;\n    display: flex;\n    position: relative;\n    justify-content: center;\n`\n\nPads.Inner = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    position: relative;\n    justify-content: center;\n    justify-items: center;\n    height: 500px;\n    margin-top: 50px;\n`\n\nconst activeCSS = color => css`\n    animation: ${createNeonAnimation(color)} 0.2s linear;\n    border-radius: 20px;\n`\n\n// prettier-ignore\nPads.Item = styled.div`\n    background: ${props => props.color};\n    border-radius: 15px;\n    box-sizing: border-box;\n    cursor: pointer;\n    height: 250px;\n    margin: 7.5px;\n    width: 250px;\n    transition: all 0.2s linear;\n    pointer-events: ${props => props.playingSequence || props.active ? 'none' : 'initial'};\n\n    ${props => (props.active ? activeCSS(props.color) : '')}\n\n    &:hover {\n        transform: ${props => !props.active ? 'scale(1.03)' : ''};\n    }\n\n    &:first-child {\n        border-top-left-radius: 100%;\n    }\n\n    &:nth-child(2) {\n        border-top-right-radius: 100%;\n    }\n\n    &:nth-child(3) {\n        border-bottom-left-radius: 100%;\n    }\n\n    &:nth-child(4) {\n        border-bottom-right-radius: 100%;\n    }\n`\n\nPads.ScoreContainer = styled.div`\n    background: #131313;\n    border-radius: 50%;\n    height: 100px;\n    position: absolute;\n    width: 100px;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`\n\nconst jellyBounce = keyframes`\n  0% { transform: matrix3d(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  3.4% { transform: matrix3d(0.316, 0, 0, 0, 0, 0.407, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  4.7% { transform: matrix3d(0.45, 0, 0, 0, 0, 0.599, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  6.81% { transform: matrix3d(0.659, 0, 0, 0, 0, 0.893, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  9.41% { transform: matrix3d(0.883, 0, 0, 0, 0, 1.168, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  10.21% { transform: matrix3d(0.942, 0, 0, 0, 0, 1.226, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  13.61% { transform: matrix3d(1.123, 0, 0, 0, 0, 1.332, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  14.11% { transform: matrix3d(1.141, 0, 0, 0, 0, 1.331, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  17.52% { transform: matrix3d(1.208, 0, 0, 0, 0, 1.239, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  18.72% { transform: matrix3d(1.212, 0, 0, 0, 0, 1.187, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  21.32% { transform: matrix3d(1.196, 0, 0, 0, 0, 1.069, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  24.32% { transform: matrix3d(1.151, 0, 0, 0, 0, 0.96, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  25.23% { transform: matrix3d(1.134, 0, 0, 0, 0, 0.938, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  29.03% { transform: matrix3d(1.063, 0, 0, 0, 0, 0.897, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  29.93% { transform: matrix3d(1.048, 0, 0, 0, 0, 0.899, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  35.54% { transform: matrix3d(0.979, 0, 0, 0, 0, 0.962, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  36.74% { transform: matrix3d(0.972, 0, 0, 0, 0, 0.979, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  41.04% { transform: matrix3d(0.961, 0, 0, 0, 0, 1.022, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  44.44% { transform: matrix3d(0.966, 0, 0, 0, 0, 1.032, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  52.15% { transform: matrix3d(0.991, 0, 0, 0, 0, 1.006, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  59.86% { transform: matrix3d(1.006, 0, 0, 0, 0, 0.99, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  63.26% { transform: matrix3d(1.007, 0, 0, 0, 0, 0.992, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  75.28% { transform: matrix3d(1.001, 0, 0, 0, 0, 1.003, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  85.49% { transform: matrix3d(0.999, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  90.69% { transform: matrix3d(0.999, 0, 0, 0, 0, 0.999, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  100% { transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); } \n`\n\nconst bounceStyles = () => css`\n    animation: ${jellyBounce} 1s linear forwards;\n`\n\nPads.ScoreText = styled.div`\n    font-size: 70px;\n    text-align: center;\n    font-weight: bolder;\n    color: white;\n    display: block;\n    position: absolute;\n    line-height: 100px;\n    width: 100%;\n    top: 7px;\n    ${props => props.isAnimating && bounceStyles()};\n`\n\nexport { Pads }\n","import styled, { keyframes, css } from 'styled-components'\n\nexport const Announcement = styled.div`\n    flex-grow: 2;\n    overflow: hidden;\n    text-align: center;\n`\n\nconst fadeUp = keyframes`\n    0% {\n        opacity: 0;\n        transform: translateY(100%);\n    }\n\n    50% {\n        opacity: 1;\n        transform: translateY(0);\n    }\n\n    100% {\n        opacity: 1;\n        transform: translateY(0);\n    }\n`\n\nconst fadeUpStyles = css`\n    animation: ${fadeUp} 1.5s;\n`\n\nAnnouncement.Text = styled.span`\n    align-items: center;\n    display: flex;\n    font-size: 40px;\n    height: 100%;\n    justify-content: center;\n    transform: translateY(100%);\n\n    ${props => props.isAnimating && fadeUpStyles}\n`\n","import styled, { css } from 'styled-components'\n\nconst gameOverStyles = css`\n    filter: grayscale(1);\n\n    &::before {\n        opacity: 1;\n        z-index: 1;\n    }\n`\n\nconst selectedStyles = css`\n    opacity: 1;\n    transform: translateY(0);\n    z-index: 50;\n`\n\nconst Board = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    left: 0;\n    opacity: 0;\n    position: absolute;\n    top: 0;\n    transform: translateY(-100%);\n    transition: filter 0.5s, opacity 1s, transform 1s;\n    width: 100%;\n    z-index: -1;\n\n    ${props => props.selected && selectedStyles}\n\n    &::before {\n        background: rgba(0, 0, 0, 0.75);\n        content: '';\n        height: 100%;\n        left: 0;\n        opacity: 0;\n        position: absolute;\n        top: 0;\n        transition: all 0.5s;\n        width: 100%;\n        z-index: -1;\n    }\n\n    ${props => props.gameOver && gameOverStyles}\n`\n\nBoard.HighScore = styled.div`\n    font-size: 30px;\n    padding-right: 20px;\n    text-align: right;\n    width: 100%;\n`\n\nexport { Board }\n","import { sound1, sound2, sound3, sound4 } from './audios'\n\nexport const colors = ['red', 'blue', 'yellow', 'green']\n\nexport const colorMap = {\n    red: '#da2c43',\n    blue: '#216ba5',\n    yellow: '#ffff00',\n    green: '#00e676',\n}\n\nexport const soundMap = {\n    red: sound1,\n    blue: sound2,\n    yellow: sound3,\n    green: sound4\n}\n\nexport const sequenceDelay = 200\nexport const reducedDelay = sequenceDelay / 2\nexport const nextLevelDelay = 2000\nexport const githubRepoUrl = 'https://github.com/ryasan86/simon'\n","import React, { useState } from 'react'\nimport { githubRepoUrl } from '../constants'\nimport { GH_ICON } from '../images'\n\nimport { Icon } from '../styles'\nimport { idle } from '../utils'\n\nconst GithubIcon: React.FC<{ className?: string }> = ({ className }) => {\n    const [isAnimating, setIsAnimating] = useState(false)\n\n    const handleMouseEnter = async () => {\n        if (!isAnimating) {\n            setIsAnimating(true)\n            await idle(1000)\n            setIsAnimating(false)\n        }\n    }\n\n    return (\n        <Icon\n            href={githubRepoUrl}\n            className={className}\n            isAnimating={isAnimating}\n            onMouseEnter={handleMouseEnter}>\n            <Icon.Img src={GH_ICON} alt='github' />\n        </Icon>\n    )\n}\n\nexport default GithubIcon\n","import styled, { css } from 'styled-components'\n\nimport GithubIcon from '../components/GithubIcon'\nimport { Button } from './Button'\n\nconst selectedStyles = css`\n    opacity: 1;\n    transform: translateY(0);\n    z-index: 50;\n`\n\nconst Home = styled.div`\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    justify-content: center;\n    opacity: 0;\n    position: absolute;\n    transform: translateY(-100%);\n    transition: opacity 1s, transform 1s;\n    width: 100%;\n    z-index: -1;\n\n    ${props => props.selected && selectedStyles}\n`\n\nHome.Title = styled.h1`\n    font-size: 150px;\n    margin-top: 0;\n    text-align: center;\n`\n\nHome.Options = styled.div`\n    text-align: center;\n`\n\nHome.Icon = styled(GithubIcon)`\n    position: absolute;\n    right: 10px;\n    top: 10px;\n`\n\nHome.Button = Button\n\nexport { Home }\n","import React from 'react'\n\nimport { Button, Navbar } from '../styles'\nimport { StateProps, DispatchProps } from '../interfaces'\nimport { START_GAME, RESET_GAME } from '../action-types'\nimport GithubIcon from './GithubIcon'\n\ntype Props = { state: StateProps } & DispatchProps\n\nconst NavbarComponent: React.FC<Props> = props => {\n    const { state: { gameOver, started, playingSequence }, dispatch } = props // prettier-ignore\n\n    return (\n        <Navbar>\n            {gameOver && !started ? (\n                <Button onClick={() => dispatch({ type: START_GAME })}>\n                    Start\n                </Button>\n            ) : (\n                <Button\n                    onClick={() => dispatch({ type: RESET_GAME })}\n                    disabled={playingSequence}>\n                    Reset\n                </Button>\n            )}\n            <GithubIcon />\n        </Navbar>\n    )\n}\n\nexport default NavbarComponent\n","export const START_GAME = 'START_GAME'\nexport const ROUND_OVER = 'ROUND_OVER'\nexport const END_GAME = 'END_GAME'\nexport const RESET_GAME = 'RESET_GAME'\nexport const NEXT_LEVEL = 'NEXT_LEVEL'\nexport const GUESS = 'GUESS'\nexport const TOGGLE_PLAYING_SEQUENCE = 'TOGGLE_PLAYING_SEQUENCE'\nexport const SCORE_POINT = 'SCORE_POINT'","import React, { useEffect, useState } from 'react'\n\nimport { Pads } from '../styles'\nimport { idle, playSound } from '../utils'\nimport { StateProps, DispatchProps } from '../interfaces'\nimport { sequenceDelay, soundMap, colors, colorMap } from '../constants'\nimport { GUESS, TOGGLE_PLAYING_SEQUENCE } from '../action-types'\n\ntype PadsProps = { state: StateProps } & DispatchProps\n\nconst PadsComponent: React.FC<PadsProps> = ({ state, dispatch }) => {\n    const { playingSequence, guessed, sequence, started, score } = state\n    const [selected, selectColor] = useState<string>(null)\n    const [isAnimating, setIsAnimating] = useState<boolean>(false)\n\n    const briefly = async (briefEffect, arg, duration) => {\n        briefEffect(arg)\n        await idle(duration)\n        briefEffect(null)\n    }\n\n    const handleClick = (e: MouseEvent) => {\n        const { color } = (e.target as HTMLElement).dataset\n\n        if (!playingSequence && started && guessed.length < sequence.length) {\n            dispatch({ type: GUESS, payload: color })\n        } else if (!started) {\n            briefly(selectColor, color, sequenceDelay)\n        }\n    }\n\n    useEffect(() => {\n        if (selected) playSound(soundMap[selected])\n    }, [selected])\n\n    useEffect(() => {\n        if (guessed.length) {\n            const color = guessed[guessed.length - 1]\n            briefly(selectColor, color, sequenceDelay)\n        }\n    }, [guessed])\n\n    useEffect(() => {\n        if (score) briefly(setIsAnimating, true, 1000)\n    }, [score])\n\n    useEffect(() => {\n        const playSequence = async () => {\n            dispatch({ type: TOGGLE_PLAYING_SEQUENCE })\n            for (const c of sequence) {\n                await briefly(selectColor, c, sequenceDelay)\n                await idle(sequenceDelay)\n            }\n            dispatch({ type: TOGGLE_PLAYING_SEQUENCE })\n        }\n\n        if (started) playSequence()\n    }, [started, sequence, dispatch])\n\n    return (\n        <Pads>\n            <Pads.Inner>\n                {colors.map((color, i) => (\n                    <Pads.Item\n                        key={i}\n                        active={color === selected}\n                        color={colorMap[color]}\n                        data-color={color}\n                        playingSequence={playingSequence}\n                        onClick={handleClick}\n                    />\n                ))}\n                <Pads.ScoreContainer>\n                    <Pads.ScoreText isAnimating={isAnimating}>\n                        {score}\n                    </Pads.ScoreText>\n                </Pads.ScoreContainer>\n            </Pads.Inner>\n        </Pads>\n    )\n}\n\nexport default PadsComponent\n","const playSound = (audioUrl: string): void => {\n    const audio = new Audio(audioUrl)\n    audio.play()\n}\n\nexport { playSound }\n","import React from 'react'\n\nimport { Modal, Button } from '../styles'\nimport { StateProps, DispatchProps } from '../interfaces'\nimport { RESET_GAME } from '../action-types'\n\ntype Props = { state: StateProps } & DispatchProps\n\nconst ModalComponent: React.FC<Props> = ({ state, dispatch }) => (\n    <Modal isActive={state.started && state.gameOver}>\n        <Modal.Container>\n            <Modal.Message>\n                Final Score: {state.score}\n                <Button onClick={() => dispatch({ type: RESET_GAME })}>\n                    Close\n                </Button>\n            </Modal.Message>\n        </Modal.Container>\n    </Modal>\n)\n\nexport default ModalComponent\n","import React, { useState, useEffect, useCallback } from 'react'\n\nimport { Announcement } from '../styles'\nimport { idle, random } from '../utils'\n\nconst messages = [\n    'Great!',\n    'Good Job :)',\n    'Excellent!',\n    'Keep It Going!',\n    \"Don't Stop Now!\"\n]\n\nconst AnnouncementComponent: React.FC<{ score: number }> = ({ score }) => {\n    const [message, setMessage] = useState('')\n    const [isAnimating, setIsAnimating] = useState(false)\n\n    const setRandomMessage = useCallback(() => {\n        let m = random(messages)\n        setMessage(prev => {\n            while (m === prev) m = random(messages)\n            return m\n        })\n    }, [])\n\n    useEffect(() => {\n        if (score && !(score % 2)) {\n            setRandomMessage()\n            setIsAnimating(true)\n            idle(1500).then(() => setIsAnimating(false))\n        }\n    }, [score, setRandomMessage])\n\n    return (\n        <Announcement>\n            <Announcement.Text isAnimating={isAnimating}>\n                {message}\n            </Announcement.Text>\n        </Announcement>\n    )\n}\n\nexport default AnnouncementComponent\n","import React, { useEffect, useReducer, Reducer, useCallback } from 'react'\n\nimport Navbar from '../components/Navbar'\nimport PadsComponent from '../components/Pads'\nimport Modal from '../components/Modal'\nimport { Board } from '../styles'\nimport { random, idle } from '../utils'\nimport { ActionProps, StateProps } from '../interfaces'\nimport { nextLevelDelay, sequenceDelay, colors } from '../constants'\nimport {\n    START_GAME,\n    END_GAME,\n    RESET_GAME,\n    NEXT_LEVEL,\n    GUESS,\n    TOGGLE_PLAYING_SEQUENCE,\n    SCORE_POINT\n} from '../action-types'\nimport Announcement from '../components/Announcement'\n\nconst initialState = {\n    playingSequence: false,\n    gameOver: true,\n    started: false,\n    score: 0,\n    sequence: [random(colors)],\n    guessed: [],\n    highScore: 0\n}\n\nconst reducer = (state: StateProps, action: ActionProps) => {\n    const { type, payload } = action\n\n    switch (type) {\n        case START_GAME:\n            return {\n                ...state,\n                started: true,\n                gameOver: false\n            }\n        case END_GAME:\n            return {\n                ...state,\n                gameOver: true,\n                highScore: payload > state.highScore ? payload : state.highScore\n            }\n        case NEXT_LEVEL:\n            return {\n                ...state,\n                sequence: [...state.sequence, random(colors)],\n                guessed: []\n            }\n        case GUESS:\n            return {\n                ...state,\n                guessed: [...state.guessed, payload]\n            }\n        case TOGGLE_PLAYING_SEQUENCE:\n            return {\n                ...state,\n                playingSequence: !state.playingSequence\n            }\n        case SCORE_POINT:\n            return {\n                ...state,\n                score: state.score + 1,\n                highScore:\n                    state.score + 1 >= state.highScore\n                        ? state.score + 1\n                        : state.highScore\n            }\n        case RESET_GAME:\n            return {\n                ...initialState,\n                highScore: state.highScore\n            }\n        default:\n            return state\n    }\n}\n\ninterface Props {\n    selected: boolean\n    onNavigate?: (path: string) => () => void\n}\n\nconst BoardPage: React.FC<Props> = ({ selected }) => {\n    const [state, dispatch] = useReducer<Reducer<StateProps, ActionProps>>(reducer, initialState) // prettier-ignore\n    const { gameOver, started, guessed, sequence, highScore, score } = state // prettier-ignore\n\n    const checkWin = useCallback(() => {\n        if (\n            sequence.length === guessed.length &&\n            sequence.every((c, i) => c === guessed[i])\n        ) {\n            idle(sequenceDelay)\n                .then(() => dispatch({ type: SCORE_POINT }))\n                .then(() =>\n                    idle(nextLevelDelay).then(() =>\n                        dispatch({ type: NEXT_LEVEL })\n                    )\n                )\n            return null\n        }\n\n        const tail = guessed.length - 1\n        if (guessed[tail] !== sequence[tail]) {\n            dispatch({ type: END_GAME })\n        }\n    }, [guessed, sequence])\n\n    useEffect(() => {\n        if (guessed.length && started) checkWin()\n    }, [guessed, started, checkWin])\n\n    return (\n        <Board selected={selected} gameOver={started && gameOver}>\n            <Modal state={state} dispatch={dispatch} />\n            <Navbar state={state} dispatch={dispatch} />\n            <Board.HighScore>High Score: {highScore}</Board.HighScore>\n            <PadsComponent state={state} dispatch={dispatch} />\n            <Announcement score={score} />\n        </Board>\n    )\n}\n\nexport default BoardPage\n","import React from 'react'\n\nimport { Home } from '../styles'\nimport { colorMap } from '../constants'\n\ninterface Props {\n    selected: boolean\n    onNavigate?: (path: string) => () => void\n}\n\nconst textColors = [\n    'red',\n    'blue',\n    'yellow',\n    'green',\n    'red',\n    'initial',\n    'blue',\n    'yellow',\n    'green',\n    'red'\n]\n\nconst HomePage: React.FC<Props> = ({ selected, onNavigate }) => (\n    <Home selected={selected}>\n        <Home.Title>\n            {[...'Simon Says'].map((c, i) => (\n                <span key={i} style={{ color: colorMap[textColors[i]] }}>\n                    {c}\n                </span>\n            ))}\n        </Home.Title>\n        <Home.Options>\n            <Home.Button onClick={onNavigate('board')}>Play</Home.Button>\n        </Home.Options>\n        <Home.Icon />\n    </Home>\n)\n\nexport default HomePage\n","import React, { useState, useEffect } from 'react'\n\nimport { App } from './styles'\nimport BoardPage from './pages/Board'\nimport HomePage from './pages/Home'\n\nconst base = process.env.NODE_ENV === 'development' ? '/' : '/simon/'\n\nconst AppComponent: React.FC = () => {\n    const [selected, setSelected] = useState(base)\n\n    const navigate = (path = '') => () => {\n        setSelected(path)\n        window.history.pushState({}, path, base + path)\n    }\n\n    const handlePop = () => {\n        const { pathname } = window.location\n        setSelected(pathname)\n    }\n\n    useEffect(() => {\n        window.addEventListener('popstate', handlePop)\n        return () => window.removeEventListener('popstate', handlePop)\n    }, [])\n\n    useEffect(() => {\n        setSelected(window.location.pathname)\n    }, [])\n\n    useEffect(() => {\n        console.log(selected)\n    },[selected])\n\n    // prettier-ignore\n    return (\n        <App>\n            <HomePage selected={selected === base} onNavigate={navigate} />\n            <BoardPage selected={selected.includes('board')} onNavigate={navigate} />\n        </App>\n    )\n}\n\nexport default AppComponent\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}